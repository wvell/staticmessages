// Code generated by "msggen"; DO NOT EDIT.
package {{ .Package }}

{{- $containerName := .Messages.Name }}
{{- $varTypeInt := .VarTypeInt }}
{{- $varTypeString := .VarTypeString }}

import(
	"fmt"
	"context"
	{{- if .Messages.HasType $varTypeInt }}
	"golang.org/x/exp/constraints"
	{{- end }}
	"github.com/wvell/messages"
)

{{- range .Messages.Messages }}
{{- $default := .Default }}
{{- $hasInteger := .HasType $varTypeInt }}
{{ $vars := .UniqueVars }}
func {{ $containerName }}{{ .Identifier }}{{ if $hasInteger }}[Integer constraints.Integer]{{ end }}(ctx context.Context
	{{- if gt (len $vars) 0 }},
	{{- range $index, $var := $vars }} {{ $var.Name }} {{ if eq $var.Type $varTypeInt }}Integer{{ else }}string{{ end }}{{ if lt $index (sub (len $vars) 1) }},{{ end }}{{ end }}
	{{- end }}) string {
	{{ if eq (len .Translations) 0 -}}
	return fmt.Sprintf("{{ $default.Message }}"{{ if gt (len $default.Vars) 0 }},{{ range $index, $var := $default.Vars }} {{ $var.Name }}{{ if lt $index (sub (len $default.Vars) 1) }},{{ end }}{{ end }}{{ end }})
	{{- else -}}
	switch messages.GetLocale(ctx) {
	{{ range $t := .Translations -}}
	case "{{ $t.Locale }}":
		return fmt.Sprintf("{{ $t.Message.Message }}"{{ if gt (len $t.Message.Vars) 0 }},{{ range $index, $var := $t.Message.Vars }} {{ $var.Name }}{{ if lt $index (sub (len $t.Message.Vars) 1) }},{{ end }}{{ end }}{{ end }})
	{{ end -}}
	default:
		return fmt.Sprintf("{{ $default.Message }}"{{ if gt (len $default.Vars) 0 }},{{ range $index, $var := $default.Vars }} {{ $var.Name }}{{ if lt $index (sub (len $default.Vars) 1) }},{{ end }}{{ end }}{{ end }})
	}
	{{- end }}
}
{{- end }}